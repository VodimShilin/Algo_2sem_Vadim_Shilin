#include <iostream>
#include <vector>
 
int main() {
    std::ios_base::sync_with_stdio(false);
    std::cin.tie(nullptr);
    std::cout.tie(nullptr);
    long long n, m;
    std::cin >> n;
    std::vector<long long> first(n + 1);
    for (int i = 1; i <= n; ++i) {
        std::cin >> first[i];
    }
    std::cin >> m;
    std::vector<long long> second(m + 1);
    for (int i = 1; i <= m; ++i) {
        std::cin >> second[i];
    }
    std::vector<std::vector<long long>> dp(n + 1, std::vector<long long>(m + 1));
    for (int i = 0; i <= n; ++i) {
        dp[i][0] = 0;
    }
    for (int i = 0; i <= m; ++i) {
        dp[0][i] = 0;
    }
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= m; ++j) {
            dp[i][j] = std::max(dp[i - 1][j], dp[i][j - 1]);
            if (first[i] == second[j]) {
                dp[i][j] = std::max(dp[i][j], 1 + dp[i - 1][j - 1]);
            }
        }
    }
    long long max = dp[0][0];
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= m; ++j) {
            max = std::max(max, dp[i][j]);
        }
    }
    std::cout << max;
    return 0;
}
